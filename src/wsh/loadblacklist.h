/**
*
* Witchcraft Compiler Collection
*
* Author: Jonathan Brossard - endrazine@gmail.com
*
*******************************************************************************
* The MIT License (MIT)
* Copyright (c) 2016-2025 Jonathan Brossard
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*******************************************************************************
*
*/


/**
* Function names blacklisted in lua or wsh
*
* Generated via: nm wsh|grep t -w|awk '{print $3}'|awk '{print "\"" $0 "\","}'
*/

char *myblacklist[] = {
"DumpBlock",
"DumpByte",
"DumpCode",
"DumpConstants",
"DumpDebug",
"DumpFunction",
"DumpHeader",
"DumpInt",
"DumpInteger",
"DumpNumber",
"DumpProtos",
"DumpString",
"DumpUpvalues",
"GCTM",
"LEintfloat",
"LEnum",
"LTintfloat",
"LTnum",
"LoadBlock",
"LoadByte",
"LoadCode",
"LoadConstants",
"LoadDebug",
"LoadFunction",
"LoadInt",
"LoadInteger",
"LoadNumber",
"LoadProtos",
"LoadString",
"LoadUpvalues",
"__do_global_dtors_aux",
"_fini",
"_init",
"abAppend",
"abFree",
"abInit",
"add_s",
"add_symbol",
"add_value",
"addfield",
"addk",
"addlenmod",
"addprototype",
"addquoted",
"addtoclib",
"adjust_assign",
"adjust_varargs",
"adjustlocalvars",
"alloccharbuf",
"arrayindex",
"assignment",
"atexit",
"atomic",
"aux_close",
"aux_lines",
"aux_upvalue",
"auxgetinfo",
"auxgetstr",
"auxresume",
"auxsetstr",
"auxsort",
"auxupvalue",
"b_str2int",
"basic_type",
"bfmap",
"block",
"block_follow",
"body",
"boolK",
"boxgc",
"breaklabel",
"breakpoint",
"bsspolute",
"buffreplace",
"byteoffset",
"callallpendingfinalizers",
"callhook",
"capture_to_close",
"check",
"checkHeader",
"checkSizes",
"check_capture",
"check_conflict",
"check_match",
"check_next1",
"check_next2",
"checkclib",
"checkfield",
"checklimit",
"checkliteral",
"checkload",
"checkmode",
"checkname",
"checknext",
"checkoption",
"checkrepeated",
"checkstack",
"checktab",
"checkupval",
"choosePivot",
"classend",
"clearkeys",
"clearvalues",
"close_func",
"close_state",
"closegoto",
"closelistfield",
"code_label",
"codeclosure",
"codecomp",
"codeexpval",
"codeextraarg",
"codenot",
"codepoint",
"codestring",
"collectvalidlines",
"completeLine",
"computesizes",
"cond",
"condjump",
"constfolding",
"constructor",
"convergeephemerons",
"copy2buff",
"copywithendian",
"correctstack",
"countint",
"cplus_demangle_type.cold",
"cplus_demangle_type.localalias",
"createclibstable",
"createmeta",
"createmetatable",
"createsearcherstable",
"createstdfile",
"createstrobj",
"currentline",
"currentpc",
"d_append_char",
"d_append_num",
"d_append_string",
"d_bare_function_type",
"d_call_offset",
"d_count_templates_scopes",
"d_cv_qualifiers",
"d_demangle_callback",
"d_discriminator",
"d_encoding.part.0",
"d_expr_primary",
"d_expression_1",
"d_exprlist",
"d_find_pack",
"d_function_type",
"d_growable_string_callback_adapter",
"d_index_template_argument.part.0",
"d_lookup_template_argument",
"d_make_comp",
"d_maybe_module_name",
"d_maybe_print_designated_init",
"d_maybe_print_fold_expression",
"d_name",
"d_number",
"d_operator_name",
"d_pack_length",
"d_parmlist",
"d_prefix",
"d_print_array_type",
"d_print_comp",
"d_print_comp_inner",
"d_print_expr_op",
"d_print_function_type",
"d_print_lambda_parm_name",
"d_print_mod",
"d_print_mod_list",
"d_print_subexpr",
"d_ref_qualifier",
"d_source_name",
"d_special_name",
"d_substitution",
"d_template_arg",
"d_template_args_1",
"d_template_head",
"d_template_param",
"d_template_parm",
"d_unqualified_name",
"db_debug",
"db_gethook",
"db_getinfo",
"db_getlocal",
"db_getmetatable",
"db_getregistry",
"db_getupvalue",
"db_getuservalue",
"db_sethook",
"db_setlocal",
"db_setmetatable",
"db_setupvalue",
"db_setuservalue",
"db_traceback",
"db_upvalueid",
"db_upvaluejoin",
"demangle_binder.part.0",
"demangle_const.part.0",
"demangle_const_uint.part.0",
"demangle_generic_arg",
"demangle_path.part.0",
"demangle_path_maybe_open_generics",
"demangle_type",
"deregister_tm_clones",
"digit",
"disableRawMode",
"disable_aslr",
"disable_core",
"discharge2anyreg",
"discharge2reg",
"dischargejpc",
"dlang_decode_backref",
"dlang_function_type.part.0",
"dlang_function_type_noreturn",
"dlang_identifier",
"dlang_lname",
"dlang_number",
"dlang_parse_integer",
"dlang_parse_mangle",
"dlang_parse_qualified",
"dlang_parse_real",
"dlang_parse_template",
"dlang_symbol_name_p",
"dlang_type",
"dlang_type_backref",
"dlang_type_modifiers.constprop.0",
"dlang_value",
"do_loadlib",
"dofilecont",
"dothecall",
"empty_phdrs",
"empty_shdrs",
"enableRawMode",
"enable_aslr",
"enable_core",
"end_capture",
"enterblock",
"enterlevel",
"entersweep",
"entrypoints",
"errfile",
"error",
"error_expected",
"errorlimit",
"esccheck",
"execlib",
"exp1",
"exp2reg",
"explist",
"expr",
"exprstat",
"f_call",
"f_flush",
"f_gc",
"f_lines",
"f_luaopen",
"f_parser",
"f_read",
"f_seek",
"f_setvbuf",
"f_tostring",
"f_write",
"fchecksize",
"field",
"fieldsel",
"filterpc",
"findfield",
"findfile",
"findgotos",
"findindex",
"findlabel",
"findlast",
"findloader",
"findlocal",
"findpcall",
"findsetreg",
"findvararg",
"finishCcall",
"finishpcall",
"fixjump",
"forbody",
"forlimit",
"forlist",
"fornum",
"forstat",
"frame_dummy",
"freeCompletions",
"freeHistory",
"freeLclosure",
"freeexp",
"freeobj",
"freereg",
"freestack",
"funcargs",
"funcinfo",
"funcname",
"funcstat",
"g_iofile",
"g_read",
"g_write",
"gctm",
"gencore",
"generic_reader",
"getColumns",
"getCursorPosition",
"getF",
"getS",
"getbinopr",
"getboolfield",
"getcached",
"getcharbuf",
"getco",
"getdebt",
"getdetails",
"getfield",
"getfreepos",
"getfuncname",
"getgeneric",
"gethexa",
"getiofile",
"getjump",
"getjumpcontrol",
"getlocvar",
"getnum",
"getnumlimit",
"getobjname",
"getoption",
"getptr",
"getthread",
"getunopr",
"getupvalname",
"getupvalref",
"gmatch",
"gmatch_aux",
"gotostat",
"grep",
"grepptr",
"growstack",
"headers",
"help",
"hexdump",
"hollywood",
"hookf",
"ifstat",
"inclinenumber",
"index2addr",
"info",
"init_exp",
"init_registry",
"initheader",
"initialize_wsh",
"intarith",
"internshrstr",
"interror",
"invertjump",
"io_close",
"io_fclose",
"io_flush",
"io_input",
"io_lines",
"io_noclose",
"io_open",
"io_output",
"io_pclose",
"io_popen",
"io_read",
"io_readline",
"io_tmpfile",
"io_type",
"io_write",
"ipairsaux",
"isUnsupportedTerm",
"is_ctor_or_dtor",
"is_designated_init.part.0.isra.0",
"iscleared",
"isinstack",
"isneg",
"iter_aux",
"iter_codes",
"jumponcond",
"k_log1p",
"k_log1p",
"kname",
"l_alloc",
"l_checktime",
"l_hashfloat",
"l_randomizePivot",
"l_str2d",
"l_str2int",
"l_strcmp",
"labelstat",
"lastlevel",
"lastlistfield",
"leaveblock",
"lexerror",
"libcall",
"linenoiseAtExit",
"linenoiseBeep",
"linenoiseEdit",
"linenoiseNoTTY",
"linenoiseRaw",
"listfield",
"ll_loadlib",
"ll_require",
"ll_searchpath",
"llex",
"lmemfind",
"load_aux",
"loadbin",
"loadfunc",
"localfunc",
"localstat",
"lookforfunc",
"lsys_load",
"lsys_sym",
"lsys_unloadlib",
"ltrace",
"assert",
"auxwrap",
"cocreate",
"collectgarbage",
"coresume",
"corunning",
"costatus",
"cowrap",
"dofile",
"error",
"getmetatable",
"ipairs",
"load",
"loadfile",
"next",
"pairs",
"pcall",
"print",
"rawequal",
"rawget",
"rawlen",
"rawset",
"select",
"setmetatable",
"tonumber",
"tostring",
"type",
"xpcall",
"yield",
"yieldable",
"barrier_",
"barrierback_",
"checkfinalizer",
"fix",
"freeallobjects",
"fullgc",
"newobj",
"runtilstate",
"step",
"upvalbarrier_",
"upvdeccount",
"call",
"callnoyield",
"growstack",
"hook",
"inctop",
"pcall",
"poscall",
"precall",
"protectedparser",
"rawrunprotected",
"reallocstack",
"shrinkstack",
"throw",
"extendCI",
"freeCI",
"freethread",
"setdebt",
"shrinkCI",
"close",
"findupval",
"freeproto",
"getlocalname",
"initupvals",
"newCclosure",
"newLclosure",
"newproto",
"addinfo",
"concaterror",
"errormsg",
"opinterror",
"ordererror",
"runerror",
"tointerror",
"traceexec",
"typeerror",
"free",
"get",
"getint",
"getn",
"getshortstr",
"getstr",
"new",
"newkey",
"next",
"resize",
"resizearray",
"set",
"setint",
"checkstack",
"code",
"codeABC",
"codeABx",
"codek",
"concat",
"dischargevars",
"exp2RK",
"exp2anyreg",
"exp2anyregup",
"exp2nextreg",
"exp2val",
"fixline",
"getlabel",
"goiffalse",
"goiftrue",
"indexed",
"infix",
"intK",
"jump",
"nil",
"numberK",
"patchclose",
"patchlist",
"patchtohere",
"posfix",
"prefix",
"reserveregs",
"ret",
"self",
"setlist",
"setoneret",
"setreturns",
"storevar",
"stringK",
"growaux_",
"realloc_",
"toobig",
"arith",
"ceillog2",
"chunkid",
"fb2int",
"hexavalue",
"int2fb",
"pushfstring",
"pushvfstring",
"str2num",
"tostring",
"utf8esc",
"clearcache",
"createlngstrobj",
"eqlngstr",
"hash",
"hashlongstr",
"init",
"new",
"newlstr",
"newudata",
"remove",
"resize",
"callTM",
"callbinTM",
"callorderTM",
"gettm",
"gettmbyobj",
"init",
"trybinTM",
"dump",
"undump",
"concat",
"div",
"equalobj",
"execute",
"finishOp",
"finishget",
"finishset",
"lessequal",
"lessthan",
"mod",
"objlen",
"shiftl",
"tointeger",
"tonumber_",
"init",
"lookahead",
"newstring",
"next",
"setinput",
"syntaxerror",
"token2str",
"parser",
"fill",
"init",
"read",
"lua_strerror",
"mainfunc",
"mainposition",
"makemask",
"makeseed",
"man",
"map",
"markbeingfnz",
"markmt",
"markupval",
"match",
"match_capture",
"match_class",
"matchbalance",
"matchbracketclass",
"math_abs",
"math_acos",
"math_asin",
"math_atan",
"math_ceil",
"math_cos",
"math_deg",
"math_exp",
"math_floor",
"math_fmod",
"math_log",
"math_max",
"math_min",
"math_modf",
"math_rad",
"math_random",
"math_randomseed",
"math_sin",
"math_sqrt",
"math_tan",
"math_toint",
"math_type",
"math_ult",
"max_expand",
"min_expand",
"mkptr",
"movegotosout",
"moveresults",
"need_value",
"new_localvar",
"new_localvarliteral_",
"newbox",
"newfile",
"newlabelentry",
"newprefile",
"newupvalue",
"next_is_type_qual.isra.0",
"nextc",
"nilK",
"noenv",
"nospecials",
"numarith",
"numusearray",
"numusehash",
"open_func",
"opencheck",
"os_clock",
"os_date",
"os_difftime",
"os_execute",
"os_exit",
"os_getenv",
"os_remove",
"os_rename",
"os_setlocale",
"os_time",
"os_tmpname",
"pack",
"packint",
"pairsmeta",
"panic",
"parlist",
"parse_hex_nibbles",
"parse_ident",
"parse_integer_62",
"partition",
"patchlistaux",
"patchtestreg",
"phdrs",
"posrelat",
"preinit_thread",
"prepstate",
"primaryexp",
"print_functions",
"print_ident",
"print_indirect_functions",
"print_libs",
"print_lifetime_from_index",
"print_objects",
"print_phdrs",
"print_shdrs",
"print_str.part.0.isra.0",
"print_symbols",
"priv_memcpy",
"priv_strcat",
"priv_strcpy",
"procmap_lua",
"propagateall",
"propagatemark",
"prototypes",
"push_captures",
"push_onecapture",
"pushclosure",
"pushfuncname",
"pushglobalfuncname",
"pushnexttemplate",
"pushnumint",
"pushstr",
"pushutfchar",
"ralloc",
"rawmemaddr",
"rawmemread",
"rawmemstr",
"rawmemstrlen",
"rawmemusage",
"rawmemwrite",
"rdnum",
"rdstr",
"read_all",
"read_chars",
"read_line",
"read_long_string",
"read_number",
"read_numeral",
"read_string",
"readable",
"readdecesc",
"readdigits",
"readhexaesc",
"readutf8esc",
"reallymarkobject",
"recfield",
"recover",
"refreshLine",
"refreshMultiLine",
"refreshSingleLine",
"register_tm_clones",
"registerlocalvar",
"rehash",
"remarkupvals",
"removeentry",
"removevalues",
"removevars",
"repeatstat",
"reprepstate",
"rescan",
"resizebox",
"resolve_addr",
"restartcollection",
"resume",
"resume_error",
"retstat",
"reverse",
"rtrace",
"run_script",
"runafewfinalizers",
"save",
"scanformat",
"searcher_C",
"searcher_Croot",
"searcher_Lua",
"searcher_preload",
"searchmem",
"searchpath",
"searchupvalue",
"searchvar",
"sec_from_addr",
"segment_add",
"semerror",
"separatetobefnz",
"set2",
"set_align_flag",
"set_branch_flag",
"set_trace_flag",
"setarrayvector",
"setboolfield",
"setcharbuf",
"seterrorobj",
"setfield",
"setnodevector",
"setpath",
"setpause",
"settabsb",
"settabsi",
"settabss",
"shdrs",
"sicode_strerror",
"signaltoname",
"simpleexp",
"singlebranch",
"singlematch",
"singlestep",
"singlestep",
"singlevar",
"singlevaraux",
"skipBOM",
"skip_sep",
"skipcomment",
"skipnoopstat",
"sort",
"sort_comp",
"stack_init",
"stackerror",
"stackinuse",
"start_capture",
"statement",
"statlist",
"str_buf_demangle_callback",
"str_buf_reserve",
"str_byte",
"str_char",
"str_checkname",
"str_dump",
"str_find",
"str_find_aux",
"str_format",
"str_gsub",
"str_len",
"str_lower",
"str_match",
"str_pack",
"str_packsize",
"str_rep",
"str_reverse",
"str_sub",
"str_unpack",
"str_upper",
"string_append",
"string_need",
"string_prepend.part.0",
"subexpr",
"suffixedexp",
"swapextra",
"sweeplist",
"sweepstep",
"sweeptolive",
"systrace",
"tag_error",
"tconcat",
"teletype",
"test2",
"test_eof",
"test_then_block",
"testnext",
"tinsert",
"tmove",
"tofile",
"tonumeral",
"traceunaligned",
"traverseCclosure",
"traverseLclosure",
"traverseephemeron",
"traverseproto",
"traversestrongtable",
"traversetable",
"traversethread",
"traverseweakvalue",
"treatstackoption",
"tremove",
"trydecpoint",
"tryfuncTM",
"txtToken",
"typeerror",
"u_posrelat",
"udata2finalize",
"unbound_search",
"undefgoto",
"unmakemask",
"unpack",
"unpackint",
"unroll",
"unrtrace",
"unset_align_flag",
"unset_branch_flag",
"unset_trace_flag",
"unsinglebranch",
"unsinglestep",
"unsystrace",
"untraceunaligned",
"unverbosetrace",
"upvalname",
"utf8_decode",
"utf8esc",
"utfchar",
"utflen",
"validop",
"varinfo",
"verbose",
"verbosetrace",
"whilestat",
"writer",
"wrptr",
"wsh_appear",
"wsh_hide",
"xalloc",
"xfree",
"yindex",
// extra symbols
"fprintf",
"fflush"
};

